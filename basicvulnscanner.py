import nmap
import requests

# Initialize the Nmap port scanner
def scan_target(target):
    nm = nmap.PortScanner()
    nm.scan(target, '1-1024')  # Scans ports 1-1024
    open_ports = []
    
    for host in nm.all_hosts():
        for proto in nm[host].all_protocols():
            for port in nm[host][proto]:
                if nm[host][proto][port]['state'] == 'open':
                    open_ports.append(port)
    
    return open_ports

# Check CVE for vulnerabilities related to services running on open ports
def check_cve(service_name):
    url = f"https://cve.circl.lu/api/search/{service_name}"
    response = requests.get(url)
    
    if response.status_code == 200:
        vulnerabilities = response.json()
        for vuln in vulnerabilities[:5]:  # Limiting output to first 5 CVEs
            print(f"CVE ID: {vuln['id']} - {vuln['summary']}")
    else:
        print(f"No vulnerabilities found for {service_name}.")

# Main function to scan target and check vulnerabilities
if __name__ == "__main__":
    target_ip = "192.168.1.1"  # Replace with the target IP
    print(f"Scanning {target_ip} for open ports...")
    
    open_ports = scan_target(target_ip)
    print(f"Open ports: {open_ports}")
    
    if open_ports:
        # Assuming service names are mapped to common ports (you can refine this)
        service_map = {22: "ssh", 80: "http", 443: "https", 21: "ftp"}
        
        for port in open_ports:
            service = service_map.get(port, None)
            if service:
                print(f"Checking vulnerabilities for {service} service...")
                check_cve(service)
    else:
        print("No open ports found.")
